import subprocess, os
from modules import time, logs, colours
from modules import pdfcreate, packages, dockerutils

class malware_scanner:
     # Setup backdoor/malware scanner on target container
     def package_install(container_id, srcdir, scan_setup_dir):
         install_cmd = "/bin/sh installer.sh --layout custom"
         create_folder = f"'mkdir -p /var/log {scan_setup_dir}; cd {srcdir}; {install_cmd} {scan_setup_dir} --install'"

         rkhunter_install_result = subprocess.run(
         [f"{packages.docker_cmd} {container_id} /bin/sh -c {create_folder}"],
            stdout=subprocess.PIPE, check=True, shell=True, encoding='utf-8')
         if rkhunter_install_result.returncode == 0:
             return rkhunter_install_result.stdout
         else:
             print(colours.red(f"backdoor&malware scanner cannot installed! {rkhunter_install_result.stdout}"))
             dockerutils.command.kill_container(container_id)

     # Start backdoor/malware scanner on target container
     def scan_container(container_id, scan_setup_dir):
         update_command = f"{scan_setup_dir}/bin/rkhunter --propupd; {scan_setup_dir}/bin/rkhunter --update"
         scan_command = f"{scan_setup_dir}/bin/rkhunter --check --skip-keypress"
         try:
             rkhunter_scanning_result = subprocess.Popen(
             [f"{packages.docker_cmd}{container_id} /bin/sh -c '{update_command}; {scan_command}'"],
                shell=True, encoding='utf-8')
             rkhunter_scanning_result.wait()
         except subprocess.CalledProcessError:
             raise

def start_malware_scan():
    report_log_file="/var/log/rkhunter.log"
    scan_setup_dir="/tmp/rkhunter"

    images = dockerutils.command.get_quarantined_images()
    image_count = len(images)

    if images is None:
        raise Exception("Cannot find any image in quarantine!")
    else:
        for image in images:
            logs.event.logger.info("[1/5] Spin-up container from quarantine to scan backdoor/malware analyz: %s" % image)
            container_id = dockerutils.command.start_container(image)
            dockerutils.command.pre_check_result(image, container_id)

            logs.event.logger.info("[2/5] Adding bacdkdoor&malware scanner package in target container: %s" % image)
            dockerutils.command.copy_files_to_container(container_id, "/opt/rkhunter.tar.gz", "/")

            logs.event.logger.info("[3/5] Checking missing packages to setup before malware scan: %s" % image)
            packages.MissingPackage.add_package(container_id, change_pkg_manager=True)

            logs.event.logger.info("[4/5] Installing backdoor&malware scanner package on image: %s" % image)
            rkhunter_install_output = malware_scanner.package_install(container_id, "/opt/rkhunter", scan_setup_dir)

            logs.event.logger.info("[5/5] Backdoor&malware analyzing:\nContainer ID: %s %s %s", container_id, '\nImage Name:', image)
            rkhunter_scan_output = malware_scanner.scan_container(container_id, scan_setup_dir)

            malware_folder = os.environ.get('MALWARE_REPORT_FOLDER')
            pdfcreate.PDFConvertor.get_detailed_report(container_id, image, report_log_file, malware_folder)
            time.WaitNextProcess.set_sleep_time(3, image_count)
if __name__ == "__main__":
  start_malware_scan()
